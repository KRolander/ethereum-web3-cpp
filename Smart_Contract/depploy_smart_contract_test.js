var Tx = require('ethereumjs-tx')
const Web3 = require('web3')
const Web3Utils = require('web3-utils');
var Eth = require('web3-eth');


const web3 = new Web3(new Web3.providers.HttpProvider('http://127.0.0.1:7545'))

const pricateKeyStr = 'b91d99a6c8027f9e68795168570965f5991fc7cf3a2543e484e61cb2ee3cf693'
const privateKey = Buffer.from(pricateKeyStr, 'hex')

const from = '0xC229738aa9E76A10a74854110d40f27A579BC004'

web3.eth.defaultAccount =  '0xC229738aa9E76A10a74854110d40f27A579BC004'

const contractABI = [
	{
		"constant": false,
		"inputs": [
			{
				"name": "x",
				"type": "uint256"
			}
		],
		"name": "toBytes",
		"outputs": [
			{
				"name": "b",
				"type": "bytes"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "pubKeyIoT",
		"outputs": [
			{
				"name": "",
				"type": "address"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "_num",
				"type": "uint8"
			}
		],
		"name": "toByte",
		"outputs": [
			{
				"name": "_ret",
				"type": "bytes1"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "my_get_bytes",
		"outputs": [
			{
				"name": "",
				"type": "bytes8[32]"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "d",
				"type": "uint8[32]"
			}
		],
		"name": "my_set",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "_dataToStore",
				"type": "uint256"
			},
			{
				"name": "_IDofIoT",
				"type": "uint8"
			},
			{
				"name": "_r",
				"type": "uint256"
			},
			{
				"name": "_s",
				"type": "uint256"
			}
		],
		"name": "setMyData",
		"outputs": [
			{
				"name": "",
				"type": "bool"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "my_get",
		"outputs": [
			{
				"name": "",
				"type": "bool"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	}
]



const  rawSmartContract = '0x606060405273fa3ca730e9d357cc7b6d8d82e8edf92c7c062aec600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600c60006101000a81548160ff021916908315150217905550341561007f57600080fd5b6109ed8061008e6000396000f300606060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063775a8f5e146100885780638f8780df14610124578063a86b73f014610179578063b4cd441e146101f7578063bc47000614610247578063c141a3021461028d578063e82bfc1f146102e6575b600080fd5b341561009357600080fd5b6100a96004808035906020019091905050610313565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e95780820151818401526020810190506100ce565b50505050905090810190601f1680156101165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561012f57600080fd5b61013761034c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018457600080fd5b61019d600480803560ff16906020019091905050610372565b60405180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b341561020257600080fd5b61020a61039e565b60405180826020800280838360005b83811015610234578082015181840152602081019050610219565b5050505090500191505060405180910390f35b341561025257600080fd5b61028b600480806104000190602080602002604051908101604052809291908260208002808284378201915050505050919050506104fd565b005b341561029857600080fd5b6102cc600480803590602001909190803560ff1690602001909190803590602001909190803590602001909190505061055f565b604051808215151515815260200191505060405180910390f35b34156102f157600080fd5b6102f9610952565b604051808215151515815260200191505060405180910390f35b61031b610969565b602060405180591061032a5750595b9080825280601f01601f19166020018201604052509050816020820152919050565b600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000817f0100000000000000000000000000000000000000000000000000000000000000029050919050565b6103a661097d565b60008090505b6020811015610463576103e26000826020811015156103c757fe5b602091828204019190069054906101000a900460ff16610372565b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660018260208110151561041357fe5b600491828204019190066008026101000a81548167ffffffffffffffff021916908378010000000000000000000000000000000000000000000000009004021790555080806001019150506103ac565b60016020806020026040519081016040528092919082602080156104f2576020028201916000905b82829054906101000a900478010000000000000000000000000000000000000000000000000277ffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906008019060208260070104928301926001038202915080841161048b5790505b505050505091505090565b60008090505b602081101561055b57818160208110151561051a57fe5b602002015160008260208110151561052e57fe5b602091828204019190066101000a81548160ff021916908360ff1602179055508080600101915050610503565b5050565b6000610569610969565b610571610969565b600080600080600060216040518059106105885750595b9080825280601f01601f191660200182016040525096506105a88c610313565b955089600102945088600102935060009250600092505b602083101561066c5785838151811015156105d657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002878481518110151561062f57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082806001019350506105bf565b8a7f01000000000000000000000000000000000000000000000000000000000000000287602081518110151561069e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350866040518082805190602001908083835b60208310151561070457805182526020820191506020810190506020830392506106df565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020915081600b8160001916905550601b9050600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600183838888604051600081526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001945050505050602060405160208103908084039060008661646e5a03f115156107f957600080fd5b50506020604051035173ffffffffffffffffffffffffffffffffffffffff1614806108fa5750600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600183600184018888604051600081526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001945050505050602060405160208103908084039060008661646e5a03f115156108d957600080fd5b50506020604051035173ffffffffffffffffffffffffffffffffffffffff16145b15610923576001600c60006101000a81548160ff02191690831515021790555060019750610943565b6000600c60006101000a81548160ff021916908315150217905550600097505b50505050505050949350505050565b6000600c60009054906101000a900460ff16905090565b602060405190810160405280600081525090565b610400604051908101604052806020905b600077ffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060019003908161098e57905050905600a165627a7a72305820df338a4a48231590b2daccb2c9fee8d41d3bf604cfe86dddde7038a8ab54f3680029'

//web3.eth.getTransactionCount(from, (err, txCount) => {console.log('error : ' + err, ' txCount : ' + txCount)})
const txCount = web3.eth.getTransactionCount(from)
console.log('txCount : ', txCount)


const txObject = {
    nonce: txCount,
    gasPrice: '0x4A817C800',
    gas: '0x6691B7', 
    data: rawSmartContract
}



const tx = new Tx(txObject)
tx.sign(privateKey)


const serializedTx = tx.serialize()
const raw = '0x' + serializedTx.toString('hex')
console.log('raw : ',raw)



web3.eth.sendRawTransaction(raw, (err, txHash) => {
     console.log('txHash:', txHash) })